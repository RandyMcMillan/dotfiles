name:     release-matrix

# Controls when the action will run.
on:
  push:
    tags:
      - "v*"

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    permissions: write-all
    env:
      GNOSTR: "gnostr"
      GNOSTR_ACT: "gnostr-act"
      GNOSTR_CAT: "gnostr-cat"
      GNOSTR_CLI: "gnostr-cli"
      GNOSTR_CLIENT: "gnostr-client"
      GNOSTR_COMMAND: "gnostr-command"
      GNOSTR_FS: "gnostr-fs"
      GNOSTR_GIT: "gnostr-git"
      GNOSTR_GNODE: "gnostr-gnode"
      GNOSTR_LEGIT: "gnostr-legit"
      GNOSTR_LFS: "gnostr-lfs"
      GNOSTR_PROXY: "gnostr-proxy"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: echo test
        #if: ${{ !env.ACT }}
        run: |
          echo GNOSTR=${{ env.GNOSTR }}
          echo GNOSTR1=${{ env.GNOSTR1 }}
        env:
          GNOSTR1: "GNOSTR1"
      - uses: styfle/cancel-workflow-action@0.11.0
        if: ${{ !env.ACT }}
        with:
          access_token: ${{ github.token }}
      - name: Restore deps
        id: cache-deps-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: ${{ runner.os }}-deps

      - uses: actions/checkout@v3
        with:
          submodules: 'true'
          set-safe-directory: 'true'

      - uses: actions-rs/toolchain@v1.0.6
        #if: ${{ !env.ACT }}
        with:
          toolchain: nightly
          default: true
          override: true

      - name: echo GNOSTR
        #if: ${{ !env.ACT }}
        run: |
          echo $GNOSTR
          touch ~/GITHUB_TOKEN.txt

      - name:  apt-get update || brew install virtualenv
        run: |
          sudo apt-get update && sudo apt-get install virtualenv || brew install virtualenv
          touch ~/GITHUB_TOKEN.txt

      - run: python3 -m pip install virtualenv

      - run: V=1 make

      - name: "Build release"
        run: |
          ls -a

      - name: Save state
        run: echo "{name}={value}" >> $GITHUB_STATE
      - name: Set output
        run: echo "{name}={value}" >> $GITHUB_OUTPUT
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: ${{ !env.ACT }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ matrix.os }}
          prerelease: false
          title: "Release Build"
          files: |
            GNUmakefile

      - name: Save deps
        id: cache-deps-save
        uses: actions/cache/save@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: ${{ steps.cache-deps-restore.outputs.cache-primary-key }}
