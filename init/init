#!/usr/bin/env bash

checkbrew() {

    if hash brew 2>/dev/null; then
        brew update
        brew upgrade
        #install brew depends
        brew install bash git wget curl vim

        #do something else

        #example - pipe remote script into bash with wget
        #wget -qO - https://raw.githubusercontent.com/initialize/this/master/init | bash

    else

    #linuxbrew is now supported via bash script

    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    checkbrew

    fi
}

configGithub() {

    read -p "Config github? (y/n) " -n 1;
    echo "";
    if [[ $REPLY =~ ^[Yy]$ ]]; then
    read -p 'ENTER your Github.com username: ' GITHUB_USER_NAME
    #read -sp 'Password: ' GITHUB_USER_PASSWORD
    git config --global user.name $GITHUB_USER_NAME
    echo Thankyou $GITHUB_USER_NAME
    read -p 'ENTER your Github.com user email: ' GITHUB_USER_EMAIL
    git config --global user.email $GITHUB_USER_EMAIL
    echo Thankyou $GITHUB_USER_NAME for your email.
    fi;

#REF: https://gist.github.com/grenade/6318301
#REF: https://www.digitalocean.com/docs/droplets/resources/troubleshooting-ssh/authentication/#fixing-key-permissions-and-ownership

    chmod 700 ~/.ssh
    chmod 600 ~/.ssh/authorized_keys
    chmod 644 ~/.ssh/known_hosts
    chmod 644 ~/.ssh/config

    DATE=$(date +%s)

    ssh-keygen -t rsa -b 4096 -N '' -C $GITHUB_USER_EMAIL -f ~/.ssh/$DATE.github_rsa

    eval "$(ssh-agent -s)"

    ssh-add ~/.ssh/$DATE.github_rsa

    chmod 600 ~/.ssh/$DATE.github_rsa
    chmod 644 ~/.ssh/$DATE.github_rsa.pub

    echo
    echo "Copy this public key to your github profile..."
    echo
    cat ~/.ssh/$DATE.github_rsa.pub
    echo
}

if [[ "$OSTYPE" == "linux-gnu" ]]; then

    sudo apt update
    sudo apt -y b bash git curl wget vim
    #sudo apt install linuxbrew-wrapper

    checkbrew

elif [[ "$OSTYPE" == "darwin"* ]]; then

    checkbrew

    #Additional configs darwin (macos gui)

    brew install tccutil
    curl -k -o /usr/local/bin/dockutil https://raw.githubusercontent.com/kcrawford/dockutil/master/scripts/dockutil
    chmod a+x /usr/local/bin/dockutil

    brew cask install --force iterm2
    dockutil --add '/Applications/iTerm.app' --replacing 'iTerm'

    brew cask install --force macvim
    dockutil --add '/Applications/MacVim.app' --replacing 'MacVim'

    brew cask install --force docker
    dockutil --add '/Applications/Docker.app' --replacing 'Docker'

    open /Applications/Docker.app

    docker run hello-world

elif [[ "$OSTYPE" == "cygwin" ]]; then
    echo TODO add support for $OSTYPE
elif [[ "$OSTYPE" == "msys" ]]; then
    echo TODO add support for $OSTYPE
elif [[ "$OSTYPE" == "win32" ]]; then
    echo TODO add support for $OSTYPE
elif [[ "$OSTYPE" == "freebsd"* ]]; then
    echo TODO add support for $OSTYPE
else
    echo TODO add support for $OSTYPE
fi

#the point
configGithub

